<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: reservation.proto
//   Date: 2017-07-27 12:58:19

namespace PlentyServices\TravelLibs\Protobuf {

  class Person extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name_first = null;
    
    /**  @var string */
    public $name_last = null;
    
    /**  @var string */
    public $name_title = null;
    
    /**  @var string */
    public $gender = null;
    
    /**  @var string */
    public $dob = null;
    
    /**  @var string */
    public $company = null;
    
    /**  @var string */
    public $street = null;
    
    /**  @var string */
    public $postal = null;
    
    /**  @var string */
    public $city = null;
    
    /**  @var string */
    public $state = null;
    
    /**  @var string */
    public $country = null;
    
    /**  @var string */
    public $phone = null;
    
    /**  @var string */
    public $email = null;
    
    /**  @var string */
    public $nationality = null;
    
    /**  @var string */
    public $language = null;
    
    /**  @var string[]  */
    public $tags = array();
    
    /**  @var \PlentyServices\TravelLibs\Protobuf\Person\Id[]  */
    public $ids = array();
    
    /**  @var string */
    public $phone_mobile = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'PlentyServicesTravelLibs.Person');

      // REQUIRED STRING name_first = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name_first";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED STRING name_last = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name_last";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL STRING name_title = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name_title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REQUIRED STRING gender = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "gender";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL STRING dob = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "dob";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING company = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "company";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING street = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "street";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING postal = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "postal";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING city = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "city";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING state = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "state";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING country = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING phone = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "phone";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING email = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "email";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING nationality = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "nationality";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING language = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "language";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING tags = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "tags";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE ids = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\PlentyServices\TravelLibs\Protobuf\Person\Id';
      $descriptor->addField($f);

      // OPTIONAL STRING phone_mobile = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "phone_mobile";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name_first> has a value
     *
     * @return boolean
     */
    public function hasNameFirst(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name_first> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearNameFirst(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name_first> value
     *
     * @return string
     */
    public function getNameFirst(){
      return $this->_get(1);
    }
    
    /**
     * Set <name_first> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setNameFirst( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name_last> has a value
     *
     * @return boolean
     */
    public function hasNameLast(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name_last> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearNameLast(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name_last> value
     *
     * @return string
     */
    public function getNameLast(){
      return $this->_get(2);
    }
    
    /**
     * Set <name_last> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setNameLast( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <name_title> has a value
     *
     * @return boolean
     */
    public function hasNameTitle(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name_title> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearNameTitle(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name_title> value
     *
     * @return string
     */
    public function getNameTitle(){
      return $this->_get(3);
    }
    
    /**
     * Set <name_title> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setNameTitle( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <gender> has a value
     *
     * @return boolean
     */
    public function hasGender(){
      return $this->_has(4);
    }
    
    /**
     * Clear <gender> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearGender(){
      return $this->_clear(4);
    }
    
    /**
     * Get <gender> value
     *
     * @return string
     */
    public function getGender(){
      return $this->_get(4);
    }
    
    /**
     * Set <gender> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setGender( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <dob> has a value
     *
     * @return boolean
     */
    public function hasDob(){
      return $this->_has(5);
    }
    
    /**
     * Clear <dob> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearDob(){
      return $this->_clear(5);
    }
    
    /**
     * Get <dob> value
     *
     * @return string
     */
    public function getDob(){
      return $this->_get(5);
    }
    
    /**
     * Set <dob> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setDob( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <company> has a value
     *
     * @return boolean
     */
    public function hasCompany(){
      return $this->_has(6);
    }
    
    /**
     * Clear <company> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearCompany(){
      return $this->_clear(6);
    }
    
    /**
     * Get <company> value
     *
     * @return string
     */
    public function getCompany(){
      return $this->_get(6);
    }
    
    /**
     * Set <company> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setCompany( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <street> has a value
     *
     * @return boolean
     */
    public function hasStreet(){
      return $this->_has(7);
    }
    
    /**
     * Clear <street> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearStreet(){
      return $this->_clear(7);
    }
    
    /**
     * Get <street> value
     *
     * @return string
     */
    public function getStreet(){
      return $this->_get(7);
    }
    
    /**
     * Set <street> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setStreet( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <postal> has a value
     *
     * @return boolean
     */
    public function hasPostal(){
      return $this->_has(8);
    }
    
    /**
     * Clear <postal> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearPostal(){
      return $this->_clear(8);
    }
    
    /**
     * Get <postal> value
     *
     * @return string
     */
    public function getPostal(){
      return $this->_get(8);
    }
    
    /**
     * Set <postal> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setPostal( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <city> has a value
     *
     * @return boolean
     */
    public function hasCity(){
      return $this->_has(9);
    }
    
    /**
     * Clear <city> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearCity(){
      return $this->_clear(9);
    }
    
    /**
     * Get <city> value
     *
     * @return string
     */
    public function getCity(){
      return $this->_get(9);
    }
    
    /**
     * Set <city> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setCity( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <state> has a value
     *
     * @return boolean
     */
    public function hasState(){
      return $this->_has(11);
    }
    
    /**
     * Clear <state> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearState(){
      return $this->_clear(11);
    }
    
    /**
     * Get <state> value
     *
     * @return string
     */
    public function getState(){
      return $this->_get(11);
    }
    
    /**
     * Set <state> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setState( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(12);
    }
    
    /**
     * Clear <country> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearCountry(){
      return $this->_clear(12);
    }
    
    /**
     * Get <country> value
     *
     * @return string
     */
    public function getCountry(){
      return $this->_get(12);
    }
    
    /**
     * Set <country> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setCountry( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <phone> has a value
     *
     * @return boolean
     */
    public function hasPhone(){
      return $this->_has(13);
    }
    
    /**
     * Clear <phone> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearPhone(){
      return $this->_clear(13);
    }
    
    /**
     * Get <phone> value
     *
     * @return string
     */
    public function getPhone(){
      return $this->_get(13);
    }
    
    /**
     * Set <phone> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setPhone( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <email> has a value
     *
     * @return boolean
     */
    public function hasEmail(){
      return $this->_has(14);
    }
    
    /**
     * Clear <email> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearEmail(){
      return $this->_clear(14);
    }
    
    /**
     * Get <email> value
     *
     * @return string
     */
    public function getEmail(){
      return $this->_get(14);
    }
    
    /**
     * Set <email> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setEmail( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <nationality> has a value
     *
     * @return boolean
     */
    public function hasNationality(){
      return $this->_has(15);
    }
    
    /**
     * Clear <nationality> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearNationality(){
      return $this->_clear(15);
    }
    
    /**
     * Get <nationality> value
     *
     * @return string
     */
    public function getNationality(){
      return $this->_get(15);
    }
    
    /**
     * Set <nationality> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setNationality( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <language> has a value
     *
     * @return boolean
     */
    public function hasLanguage(){
      return $this->_has(16);
    }
    
    /**
     * Clear <language> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearLanguage(){
      return $this->_clear(16);
    }
    
    /**
     * Get <language> value
     *
     * @return string
     */
    public function getLanguage(){
      return $this->_get(16);
    }
    
    /**
     * Set <language> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setLanguage( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <tags> has a value
     *
     * @return boolean
     */
    public function hasTags(){
      return $this->_has(20);
    }
    
    /**
     * Clear <tags> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearTags(){
      return $this->_clear(20);
    }
    
    /**
     * Get <tags> value
     *
     * @param int $idx
     * @return string
     */
    public function getTags($idx = NULL){
      return $this->_get(20, $idx);
    }
    
    /**
     * Set <tags> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setTags( $value, $idx = NULL){
      return $this->_set(20, $value, $idx);
    }
    
    /**
     * Get all elements of <tags>
     *
     * @return string[]
     */
    public function getTagsList(){
     return $this->_get(20);
    }
    
    /**
     * Add a new element to <tags>
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function addTags( $value){
     return $this->_add(20, $value);
    }
    
    /**
     * Check if <ids> has a value
     *
     * @return boolean
     */
    public function hasIds(){
      return $this->_has(21);
    }
    
    /**
     * Clear <ids> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearIds(){
      return $this->_clear(21);
    }
    
    /**
     * Get <ids> value
     *
     * @param int $idx
     * @return \PlentyServices\TravelLibs\Protobuf\Person\Id
     */
    public function getIds($idx = NULL){
      return $this->_get(21, $idx);
    }
    
    /**
     * Set <ids> value
     *
     * @param \PlentyServices\TravelLibs\Protobuf\Person\Id $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setIds(\PlentyServices\TravelLibs\Protobuf\Person\Id $value, $idx = NULL){
      return $this->_set(21, $value, $idx);
    }
    
    /**
     * Get all elements of <ids>
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person\Id[]
     */
    public function getIdsList(){
     return $this->_get(21);
    }
    
    /**
     * Add a new element to <ids>
     *
     * @param \PlentyServices\TravelLibs\Protobuf\Person\Id $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function addIds(\PlentyServices\TravelLibs\Protobuf\Person\Id $value){
     return $this->_add(21, $value);
    }
    
    /**
     * Check if <phone_mobile> has a value
     *
     * @return boolean
     */
    public function hasPhoneMobile(){
      return $this->_has(22);
    }
    
    /**
     * Clear <phone_mobile> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function clearPhoneMobile(){
      return $this->_clear(22);
    }
    
    /**
     * Get <phone_mobile> value
     *
     * @return string
     */
    public function getPhoneMobile(){
      return $this->_get(22);
    }
    
    /**
     * Set <phone_mobile> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Person
     */
    public function setPhoneMobile( $value){
      return $this->_set(22, $value);
    }
  }
}

