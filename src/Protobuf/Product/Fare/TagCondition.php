<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: reservation.proto
//   Date: 2016-12-02 21:43:27

namespace PlentyServices\TravelLibs\Protobuf\Product\Fare {

  class TagCondition extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $tag = null;
    
    /**  @var string[]  */
    public $ids = array();
    
    /**  @var int[]  */
    public $max = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'PlentyServicesTravelLibs.Product.Fare.TagCondition');

      // REQUIRED STRING tag = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tag";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED STRING ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED INT32 max = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "max";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tag> has a value
     *
     * @return boolean
     */
    public function hasTag(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tag> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function clearTag(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tag> value
     *
     * @return string
     */
    public function getTag(){
      return $this->_get(1);
    }
    
    /**
     * Set <tag> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function setTag( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <ids> has a value
     *
     * @return boolean
     */
    public function hasIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <ids> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function clearIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getIds($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <ids> value
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function setIds( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <ids>
     *
     * @return string[]
     */
    public function getIdsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <ids>
     *
     * @param string $value
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function addIds( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <max> has a value
     *
     * @return boolean
     */
    public function hasMax(){
      return $this->_has(3);
    }
    
    /**
     * Clear <max> value
     *
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function clearMax(){
      return $this->_clear(3);
    }
    
    /**
     * Get <max> value
     *
     * @param int $idx
     * @return int
     */
    public function getMax($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <max> value
     *
     * @param int $value
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function setMax( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <max>
     *
     * @return int[]
     */
    public function getMaxList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <max>
     *
     * @param int $value
     * @return \PlentyServices\TravelLibs\Protobuf\Product\Fare\TagCondition
     */
    public function addMax( $value){
     return $this->_add(3, $value);
    }
  }
}

